@using P3_Project.Models
@model PackModel
@{
	Layout = "_Layout";
    ViewData["Title"] = "Vælg pakkemuligheder";
}
<h1>@ViewData["Title"]</h1>

<div class="grid-container-PackPicker">
	<div class="PackPickerHeader"><h3 style="text-align:start;"><b>Pakke: @Model.Name</b></h3><h3 style="text-align:end;"><b>Pris: @Model.Price kr.-</b></h3></div>
	@{
		int index = 1;
		var IdIndex = 1;
		foreach(var option in Model.Options){
																																																									<div class="PackChoices"><h4><b>Valgmulighed @index</b></h4></div>
			var OptionCount = 1;
			foreach(var ItemModelId in option){
				ItemModel model = ItemModel.LoadModel(ItemModelId.ToString());
				model.LoadItems();

																																																																							<div class="PackPickerItems" id="Option@(index)">
																																																																								<div class="PackPickerImgContainer">
																																																																								
																																																																										
																																																																										<img class="PackPickerImg" src="@(model.GetFirstImg().FilePath)"/>
																																																																										
																																																																								
																																																																								</div>
																																																																								<div class="box" id="NameBox" style="position: relative; height: 50px; width:240px; top: 26px; padding: 10px;">@(model.ModelName)</div>

																																																																								<h5 class="smltext">Farve:</h5>

																																																																								<div class="PackPickerFlexBox" id="Flexbox@(index)@(OptionCount)">
																																																																									@{
							int colorIndex = 1;
							foreach ((string, string) color in model.GetUniqueColor())
							{
																																																																																																																																						<div class="colorBoxSelect" style="border: 2px solid transparent">
																																																																																																																																							<div class="colorBox" id="color@(index)@(OptionCount)@(colorIndex)" value="@(color.Item2)" style="background-color: @(color.Item2);" onclick="ColorSelect(this.id)"></div>
																																																																																																																																						</div>
								colorIndex += 1;
							}
																																																																									}
																																																																								</div>

																																																																								<h5 class="smltext size">Størrelse:</h5>
																																																																								<select class="PackSelect" style="position: relative;">
																																																																								@{
						int sizeIndex = 1;
						foreach (string size in model.GetUniqueSize())
						{
																																																																																																																																													<option id="size@(sizeIndex)">@(size)</option>
							sizeIndex += 1;
						}
																																																																								}
																																																																								</select>
																																																																															
																																																																								<div id="CheckMarkBox" class="box CheckMark" style="position: relative; width: 40px; height: 40px; border-width: 2px; padding: 4px; margin: 2px;" onclick="CheckBox(this)"></div>
																																																																							</div>
					IdIndex++;
					OptionCount++;
			}
			index += 1;
		}
	}
</div>

<div class="box" style="position: relative; left:70vw; display: block; text-align: center; margin-top: 12px; margin-bottom: 12px; width: 220px; padding: 6px;" onclick="addToCart()">Tilføj pakke til indkøbskurv</div>

<script>
	function CheckBox(CheckMarkBox) {
		let ParentOption = CheckMarkBox.parentElement.id;
		const CheckMark = document.createElement("img");
		CheckMark.setAttribute("style", "width:22px; height: 22px;");
		CheckMark.setAttribute("src", "../Pics/checkmark-svgrepo-com.svg");
		console.log(CheckMarkBox.children.length > 0);
		console.log(ParentOption);
		let deleteIndex = 0;

		if(CheckMarkBox.children.length > 0){
			deleteIndex++;
		}

		document.querySelectorAll(`#${ParentOption}`).forEach( element => {
			console.log(element.querySelector("#CheckMarkBox"));
			let box = element.querySelector("#CheckMarkBox");
			if (box.children.length > 0) {
			box.removeChild(box.firstChild);
			}
			//element.removeChild(element.firstChild);
		})
		
		if(CheckMarkBox.children.length == 0 && deleteIndex == 0){
			CheckMarkBox.appendChild(CheckMark);
		}
		

	}

	function ColorSelect(ID){

		let ColorChoice = document.getElementById(ID);
		let ParentFlex = ColorChoice.parentElement.parentElement;
		if (ColorChoice.parentElement.style.border == "2px solid transparent"){
		ParentFlex.querySelectorAll(".colorBox").forEach(color => { color.parentElement.style.border = "2px solid transparent" })
		ColorChoice.parentElement.style.border = "2px solid DodgerBlue";
		}else{
		ParentFlex.querySelectorAll(".colorBox").forEach(color => { color.parentElement.style.border = "2px solid transparent" })
		}
	}

	function addToCart() {

		let SelectedValues = {

		}
		let obj = [];
		let loopindex = 0;
			document.querySelectorAll(".PackPickerItems").forEach( element =>{
				if(element.querySelector("#CheckMarkBox").children.length > 0){
					let Name = element.querySelector("#NameBox").textContent;
					let Size = element.querySelector("select").value;
					option = element;
					let Colors = [];
					let ColArray = 0;
					option.querySelectorAll(".colorBoxSelect").forEach(color =>{
						if((color.style.border).toString() == "2px solid dodgerblue"){
							Colors[ColArray] = color.querySelector(".colorBox").getAttribute('value');
							ColArray++;
						}
					})
					console.log(Colors);
					obj[loopindex] = { name: Name, size: Size, ItemColors: Colors[0] };
					loopindex++;
			    }
			})
			SelectedValues = Object.assign(SelectedValues, obj);
			console.log(SelectedValues);

			let itemData = {
				packid: "@Model.PackID",
				packname: "@Model.Name",
				price: @Model.Price
			};
			itemData = Object.assign(itemData, SelectedValues);

			console.log(itemData);
			
	}

</script>