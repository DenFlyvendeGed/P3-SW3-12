@{
    Layout = "AdminLayout";

    ViewData["Title"] = "Faktura indstillinger";
}

<h1>@ViewData["Title"]</h1>

<div class="settingGrid">
    <div class="box fakturaSetting settingItem">
        <div class="textAllign">Virksomhedens navn:</div>
        <input type="text" @(ViewBag.model[0]?.CompanyName != null ? Html.Raw($"value=\"{ViewBag.model[0]?.CompanyName}\"") : "Virksomhedens navn") id="companyName" />
    </div>

    <div class="box fakturaSetting settingItem">
        <div class="textAllign">Virksomhedens addresse:</div>
        <input type="text" @(ViewBag.model[0]?.CompanyAddress != null ? Html.Raw($"value=\"{ViewBag.model[0]?.CompanyAddress}\"") : "Virksomhedens addresse") id="companyAddress" />
    </div>

    <div class="box fakturaSetting settingItem">
        <div class="textAllign">Virksomheds CVR:</div>
        <input type="text" @(ViewBag.model[0]?.CompanyCVR != null ? "value = " + ViewBag.model[0].CompanyCVR : "Virksomhedens CVR") id="companyCVR" />
    </div>

    <div class="box fakturaSetting settingItem">
        @{
            string toolTipAddress = "Hvor varen skal afhentes.";
            <div class="textAllign">Afhentningsaddresse:<span class="hovertext" data-hover="@(toolTipAddress)">?</span></div>
            <input type="text" @(ViewBag.model[0]?.PickUpAddress != null ? Html.Raw($"value=\"{ViewBag.model[0]?.PickUpAddress}\"") : "Afhentningsaddresse") id="pickUpAddress" />
        }
    </div>

    <div class="box fakturaSetting settingItem">
        @{
            string toolTipDeadline = "Antal dage hvorefter kunden senest kan hente bestilte vare";
            <div class="textAllign">Afhentningsdeadline:<span class="hovertext" data-hover="@(toolTipDeadline)">?</span></div>
            <input type="text" @(ViewBag.model[0]?.PickUpDeadLine != null ? "value = " + ViewBag.model[0].PickUpDeadLine : "Afhentnings deadline i dage") id="pickUpDeadline" />
        }
    </div>

    <div class="box fakturaSetting settingItem">
        @{
            string toolTipMoms = "Moms i procent %";
            <div class="textAllign">Moms %:<span class="hovertext" data-hover="@(toolTipMoms)">?</span></div>
            <input type="text" @(ViewBag.model[0]?.Moms != null ? "value = " + ViewBag.model[0].Moms : "Moms %") id="moms" />
        }
    </div>

</div>

<div style="margin-left: 80vw; margin-top: 7vw;">
    <input type="button" value="Opdater" id="update" />
</div>



<script>

    async function updateFaktura() {

        let companyName = document.getElementById("companyName").value;
        let companyAddress = document.getElementById("companyAddress").value;
        let companyCVR = document.getElementById("companyCVR").value;
        let pickUpAddress = document.getElementById("pickUpAddress").value;
        let pickUpDeadline = document.getElementById("pickUpDeadline").value;
        let moms = document.getElementById("moms").value;

        let fakturaDate = {
            Id: 1,
            CompanyName: companyName,
            CompanyAddress: companyAddress,
            CompanyCVR: companyCVR,
            PickUpAddress: pickUpAddress,
            PickUpDeadLine: pickUpDeadline,
            Moms: moms,
        }

        console.log(fakturaDate);

        const data = JSON.stringify(fakturaDate);

        const response = await fetch("../api/Admin/UpdateFaktura", {
            method: 'PUT',
            redirect: 'follow',

            headers: {
                'Content-Type': 'application/json'
            },
            body: data

        })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                }
            });

    }

    document.getElementById("update").addEventListener("click", updateFaktura);

</script>


<style>

    .textAllign {
        text-align: center;
    }

    .fakturaSetting {
        height: 100px;
    }

    .settingGrid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        margin: 1em;
        align-items: center;
        gap: 10%;
    }

    .settingItem {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

</style>