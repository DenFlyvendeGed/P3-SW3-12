@{
    Layout = "AdminLayout";

    ViewData["Title"] = "Tilføj vare";
}
<h4>Opret genstand</h4>


<script>
    document.querySelector('#AddItemModelSite').style = ("color: rgb(59, 146, 178) !important");

   
</script>


<div class="container">

    
    <div id="imgBox" class="center">
        <div id="img" class="center">
            @*Billed placehodler*@
            <img src=""/>
            @*Upload knap*@
            <button id ="uploadButton" class="center ASHButton" onclick="document.getElementById('imgUp').click();">Upload Billed</button>
            <input type="file" accept="image/*" id="imgUp" style="visibility: hidden;" onchange="saveImg">
        </div>
    </div>


    <script>
        const input = document.querySelector('input');
        const log = document.getElementById('imgUp');

        input.addEventListener('input', saveImg);

        function saveImg(e){
            log.textContent = e.target.value;
            concole.log(log.textContent);
        }
    </script>


    <div class="item CreateItemModel box">

        @*Item model name and price*@
        <div style="margin-left: 15px; margin-top: 10px;">
            <p>Navn: <input type="text" id="ItemModelName" name="ItemModelName" /> Pris: <input type="text" id="ItemModelPrice" name="ItemModelPrice" /> </p>
        </div>
        
        @*Item table*@
        <div class="ItemTable">
            
            <style>
                table, th, td {
                    border: 1px solid black;
                    border-collapse: collapse;
                }
            </style>

                
            <table id="itemTable">
               <tbody id="itemSize">
                   <tr id="itemColor">
                        <th>Størrelse:\Farve:</th>
                   </tr>



               </tbody>
            </table>

            <input type="submit" id="AddRow" class="button" value="Tilføj størrelse" /> 
            <input type="submit" id="AddCol" class="button" value="Tilføj farve" /> 


            <script>


                function Grid() {
                    this.rowId = 1;
                    this.colId = 1;
                    this.rows = 0;
                    this.cols = 0;

                    const rowDom = document.getElementById('itemSize');
                    const colDom = document.getElementById('itemColor');

                    //Size = Row
                    //Color = Col

                    this.itemData = {};
                    
                    this.itemData.rows = {
                        amount : 0,
                        itemSize : [],
                    }

                    this.itemData.cols = {
                        amount: 0,
                        itemColor: [],
                    }


                    this.updateRow = (e) => {
                        let id = e.target.id;
                        if(id.includes(",")){
                            const ids = id.split(",");
                            let row = this.itemData.rows.itemSize.find(row => row.id == ids[0]);
                            console.log(this.itemData)
                            let field = row.items.find(col => col.colId == ids[1]);
                            
                            field.value = e.target.value;

                        }
                        else{
                            let row = this.itemData.rows.itemSize.find(row => row.id == id);
                            row.size = e.target.value;
                        }
                        
                        console.log(this.itemData);
                    }

                    this.updateCol = (e) => {
                        let id = e.target.id;
                        let col = this.itemData.cols.itemColor.find(col => col.id == id);
                        col.color = e.target.value;
                        console.log(this.itemData);
                    }
                    

                    this.addRow = () => {
                        let newRow = rowDom.insertRow(-1);
                        newRow.id = this.rowId;

                        newRow.addEventListener("change", grid.updateRow);
                        this.itemData.rows.itemSize.push(
                            {
                                id : this.rowId,
                                size: "",
                                items: [],
                                dom: newRow,
                            }
                        );
                        
                        const container = newRow.insertCell(0);
                        var newElem = document.createElement('input');
                        newElem.id = this.rowId;
                        container.append(newElem);
                        
                        
                        this.rowId++;
                        this.itemData.rows.amount++;
                        this.updateGrid(newRow);
                    }


                    this.addCol = () => {
                        let newCol = colDom.insertCell(-1);
                        newCol.id = this.colId;
                        
                        newCol.addEventListener("change", grid.updateCol);
                        this.itemData.cols.itemColor.push(
                            {
                                id: this.colId,
                                color: "",
                                dom: newCol,

                            }
                        );

                        let newElem = document.createElement('input');
                        newElem.id = this.colId;
                        newCol.append(newElem);

                        
                        this.colId++;
                        this.itemData.cols.amount++;
                        this.updateGrid(newCol);
                    }

                    this.updateGrid = (dom) => {
                        //Update grid with rows
                        if(this.rows != this.itemData.rows.amount) {
                            for(let i = 0; i < this.itemData.cols.amount; i++){
                                //Create field in html

                                let newCell = dom.insertCell(-1);

                                const rowId = dom.id;
                                const colId = this.itemData.cols.itemColor[i].id;

                                const id = rowId +"," + colId;
                                newCell.id = id;
                                let newElem = document.createElement('input');
                                newElem.id = id;
                                newCell.append(newElem);
                                
                                //Create field in itemData object
                                let row = this.itemData.rows.itemSize.find(row => row.id == rowId);
                                console.log(this.itemData);
                                row.items.push({
                                    value: "",
                                    colId: colId,
                                   
                                })
                            }
                            this.rows++;
                            
                        }
                        //Update grid with cols
                        else if (this.cols != this.itemData.cols.amount){
                            for(let i = 0; i < this.itemData.rows.amount; i++){
                                //Create field in html
                                let newCell = this.itemData.rows.itemSize[i].dom.insertCell(-1);
    
                                const rowId = this.itemData.rows.itemSize[i].id;
                                const colId = dom.id;

                                const id = rowId +","+ colId;
                                newCell.id = id;
                                let newElem = document.createElement('input');
                                newElem.id = id;
                                newCell.append(newElem);

                                //Create field in itemData object
                                let row = this.itemData.rows.itemSize.find(row => row.id == rowId);
                                row.items.push({
                                    value: "",
                                    colId: colId,

                                })
                            }

                            this.cols++;
                        }
                        else 
                            alert("fejl");
                    }



                    
                    

                }

                let grid = new Grid();
                document.querySelector("#AddRow").addEventListener("click", grid.addRow);
                document.querySelector("#AddCol").addEventListener("click", grid.addCol);

              

            </script>



            
        </div>

        @*Notifikation ved lager*@
        <div style="margin-left: 15px; margin-top: 5px;">
            <p>Notifikation ved lager beholdning: <input type="text" id="StockNotification" name="StockNotification" /></p>
        </div>




    </div>

    
    
</div>
<div style="margin-left: 80vw;">
    <button id="CreateItemModel" name="CreateItemModel" class="ASHButton">Opdater</button>
</div>

