@using P3_Project.Models
@model PromoCode
@{
    Layout = "AdminLayout";
    ViewData["Title"] = "Rediger Rabat Kode";

	string before = "PriceBefore";
	string after = "PriceAfter";

	string isModel() {
		if(Model.Id == null)
			return "Opret Rabatkode";
		return "Redig√©r Rabatkode (" + Model.Id + ": " + Model.Code + ")";
	}
}


<style>
	#editPromoCodeContent {
		width: 100%;
		margin: auto;
	}
	.edit-field {
		display: flex;
		align-self: center;
		justify-content:space-between;
		margin-top: 4px;
		margin-bottom: 4px;
		margin-left: 0px;
		margin-right: 0px;
		padding: 5px;
	}

	.edit{
		display: flex;
		align-items: center;
		height: inherit;
		padding: 2px;
	}
	.promo-code-price {
		display: inline;
	}

	.edit > p {
		margin: 0px;
	}
</style>


<h1>@isModel()</h1>
<script type="text/javascript">
	function getData() {
		let rtn = {
			Code : document.getElementById("promo-code-code").value,
			ExpirationDate : document.getElementById("promo-code-date").value,
			DiscountType : parseInt(document.getElementById("promo-code-discount-type").value),
			Value : parseInt(document.getElementById("promo-code-value").value),
			ItemType : 2,
			Items : []
		}
		console.log(rtn);
		return rtn;
	}
	@if(@Model.Id == null){	
		<text>function UpdateDB() { 
			fetch("/api/admin/createPromoCode", {
				method : 'POST',
				body : JSON.stringify(getData()) 
			}).then(() => {
				window.location.href = "/admin/promocode";
			})
		}</text>
	} else {
		<text>function UpdateDB() { 
			fetch("/api/admin/editPromoCode/@Model.Id", {
				method : 'PUT',
				body : JSON.stringify(getData()) 
			}).then(() => {
				window.location.href = "/admin/promocode";
			})
		}</text>
	}
</script>


<div id="editPromoCodeContent">
	<div class="edit-field box">
		<div class="edit">
			<p><b>Navn/Kode:</b> <input id="promo-code-code" value="@Model.Code"/></p>
		</div>
		<div class="edit">
			<p><b>Slutdato:</b> <input id="promo-code-date" type="date" value="@Model.ExpirationDate.ToString("yyyy-MM-dd")"/></p>
		</div>
	</div>
	<div class="edit-field box" style="justify-content:center">
		<div class="edit">
			<p><b>Rabat: </b> <input id="promo-code-value" value="@Model.Value" style="text-align:right"/>
				<select id="promo-code-discount-type">
					@{
						async Task AddOption(PromoCodeDiscountType type, string message) {
							if(Model.DiscountType == type){
								<option value="@((int)type)" selected> @message </option> 
							} else {
								<option value="@((int)type)"> @message </option> 
							}
						}
						AddOption(PromoCodeDiscountType.Percentage, "Procent (%)");
						AddOption(PromoCodeDiscountType.Fixed     , "Fastsat (kr.)");
					}
				</select>
			</p>
		</div>
	</div>
	<div class="edit-field box">
		<p><b>Indhold</b></p>
	</div>
	<input type="button" onclick="UpdateDB()" value = "@(Model.Id == null ? "Opret" : "Opdater")"/>
</div>

<script>
</script>



